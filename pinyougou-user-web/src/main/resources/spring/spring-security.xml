<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
			 http://www.springframework.org/schema/security
			 http://www.springframework.org/schema/security/spring-security.xsd">
    <!--需要放行的内容-->
    <http pattern="/img/**" security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/plugins/**" security="none"/>
    <http pattern="/register.html" security="none"/>
    <http pattern="/user/add.do" security="none"/>
    <http pattern="/user/sendCode.do" security="none"/>

    <!-- entry-point-ref 入口点引用,即登录点引用,使用cas作为登录入口
     entry-point-ref="casProcessingFilterEntryPoint"-->
    <http use-expressions="false" entry-point-ref="casProcessingFilterEntryPoint">
        <intercept-url pattern="/**" access="ROLE_USER"/>

<!--        <logout logout-url="/logout" logout-success-url="/login.html"/>-->
<!--        <form-login login-page="/login.html" default-target-url="/admin/index.html"-->
<!--                    authentication-failure-url="/filer.html" />-->
        <csrf disabled="true"/>

        <!-- custom-filter 定制过滤器,security可以在配置文件中配置过滤器不需要在xml中配置
             position 表示将过滤器放在指定的位置上执行,如LOGOUT_FILTER是登出过滤器的别名
              ,before 表示放在指定位置之前执行,after 表示放在指定的位置之后
         -->
        <custom-filter ref="casAuthenticationFilter" position="CAS_FILTER" />
        <custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
        <custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
    </http>

    <!-- entry-point-ref 入口点引用 -->
    <beans:bean id="casProcessingFilterEntryPoint"
                class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <beans:property name="loginUrl" value="http://localhost:9100/cas/login"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
    </beans:bean>
     <!--单点登录服务器url-->
    <beans:bean id="serviceProperties"
                    class="org.springframework.security.cas.ServiceProperties">
        <!--service 配置自身工程的根地址+/login/cas -->
        <beans:property name="service" value="http://localhost:9106/login/cas"/>
    </beans:bean>
    <!-- CAS 入口点 结束 -->

    <!-- 认证过滤器(cas认证) 开始,相当于在xml中配置认证过滤器-->
    <beans:bean id="casAuthenticationFilter"
                class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>
    <!-- 认证管理器 -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="casAuthenticationProvider"/>
    </authentication-manager>

    <!-- 认证提供者 -->
    <beans:bean id="casAuthenticationProvider"
                class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
    <beans:property name="authenticationUserDetailsService">
        <beans:bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
            <beans:constructor-arg ref="userDetailsService" />
        </beans:bean>
    </beans:property>
    <beans:property name="serviceProperties" ref="serviceProperties"/>
    <!-- ticketValidator 为票据验证器 相当于在xml中配置Ticket校验过滤器-->
    <beans:property name="ticketValidator">
        <beans:bean
                class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
            <beans:constructor-arg index="0" value="http://localhost:9100/cas"/>
        </beans:bean>
    </beans:property>
    <beans:property name="key" value="an_id_for_this_auth_provider_only"/>
    </beans:bean>
    <!-- 认证类 -->
    <beans:bean id="userDetailsService" class="com.pinyougou.user.service.UserDetailServiceImpl"/>
    <!-- 认证过滤器(cas认证) 结束 -->

    <!-- 单点登出(退出登录) 开始 -->
    <beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    <!--经过此配置后,当用户输入本地工程/logout/cas就相当于输入
    http://localhost:9100/cas/logout?service=http://www.baidu.com他们是一个映射关系-->
    <beans:bean id="requestSingleLogoutFilter"
                class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:constructor-arg value="http://localhost:9100/cas/logout?service=http://localhost:9106"/>
        <beans:constructor-arg>
            <beans:bean
                    class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </beans:constructor-arg>
        <beans:property name="filterProcessesUrl" value="/logout/cas"/>
    </beans:bean>
    <!-- 单点登出 结束 -->
</beans:beans>







